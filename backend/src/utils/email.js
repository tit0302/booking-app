const nodemailer = require('nodemailer');

// T·∫°o transporter cho Gmail SMTP
const createTransporter = () => {
  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS
    }
  });
};

// Template email x√°c nh·∫≠n booking
const getBookingConfirmationTemplate = (booking, service, user) => {
  const bookingDate = new Date(booking.time).toLocaleString('vi-VN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });

  return {
    subject: `X√°c nh·∫≠n ƒë·∫∑t d·ªãch v·ª• - ${service.name}`,
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center;">
          <h1>EasyBook - X√°c nh·∫≠n ƒë·∫∑t d·ªãch v·ª•</h1>
        </div>
        
        <div style="padding: 20px; background: #f9f9f9;">
          <h2>Xin ch√†o ${user.name}!</h2>
          <p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa EasyBook. D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt v·ªÅ booking c·ªßa b·∫°n:</p>
          
          <div style="background: white; padding: 20px; margin: 20px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <h3>Th√¥ng tin d·ªãch v·ª•</h3>
            <p><strong>D·ªãch v·ª•:</strong> ${service.name}</p>
            <p><strong>ƒê·ªãa ƒëi·ªÉm:</strong> ${service.location}</p>
            <p><strong>Th·ªùi gian:</strong> ${bookingDate}</p>
            <p><strong>S·ªë ti·ªÅn:</strong> ${booking.amount.toLocaleString('vi-VN')} VNƒê</p>
            <p><strong>Tr·∫°ng th√°i:</strong> ${booking.status === 'paid' ? 'ƒê√£ thanh to√°n' : 'Ch·ªù thanh to√°n'}</p>
            <p><strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> ${booking.paymentMethod.toUpperCase()}</p>
          </div>
          
          <div style="background: white; padding: 20px; margin: 20px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <h3>Th√¥ng tin li√™n h·ªá</h3>
            <p><strong>T√™n:</strong> ${booking.customerInfo.name}</p>
            <p><strong>Email:</strong> ${booking.customerInfo.email}</p>
            <p><strong>S·ªë ƒëi·ªán tho·∫°i:</strong> ${booking.customerInfo.phone}</p>
            ${booking.customerInfo.note ? `<p><strong>Ghi ch√∫:</strong> ${booking.customerInfo.note}</p>` : ''}
          </div>
          
          <div style="background: white; padding: 20px; margin: 20px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <h3>Th√¥ng tin li√™n h·ªá d·ªãch v·ª•</h3>
            <p><strong>ƒêi·ªán tho·∫°i:</strong> ${service.contactInfo.phone}</p>
            <p><strong>Email:</strong> ${service.contactInfo.email}</p>
            <p><strong>ƒê·ªãa ch·ªâ:</strong> ${service.contactInfo.address}</p>
          </div>
          
          <p style="margin-top: 20px; color: #666;">
            N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email ho·∫∑c s·ªë ƒëi·ªán tho·∫°i tr√™n.
          </p>
          
          <p style="margin-top: 20px; color: #666;">
            Tr√¢n tr·ªçng,<br>
            ƒê·ªôi ng≈© EasyBook
          </p>
        </div>
        
        <div style="background: #333; color: white; padding: 20px; text-align: center;">
          <p>&copy; 2024 EasyBook. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
        </div>
      </div>
    `
  };
};

// Template email nh·∫Øc l·ªãch
const getReminderTemplate = (booking, service, user) => {
  const bookingDate = new Date(booking.time).toLocaleString('vi-VN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });

  return {
    subject: `Nh·∫Øc l·ªãch - D·ªãch v·ª• ${service.name} v√†o ng√†y mai`,
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; padding: 20px; text-align: center;">
          <h1>EasyBook - Nh·∫Øc l·ªãch</h1>
        </div>
        
        <div style="padding: 20px; background: #f9f9f9;">
          <h2>Xin ch√†o ${user.name}!</h2>
          <p>ƒê√¢y l√† email nh·∫Øc l·ªãch cho booking c·ªßa b·∫°n v√†o ng√†y mai:</p>
          
          <div style="background: white; padding: 20px; margin: 20px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <h3>Th√¥ng tin d·ªãch v·ª•</h3>
            <p><strong>D·ªãch v·ª•:</strong> ${service.name}</p>
            <p><strong>ƒê·ªãa ƒëi·ªÉm:</strong> ${service.location}</p>
            <p><strong>Th·ªùi gian:</strong> ${bookingDate}</p>
            <p><strong>S·ªë ti·ªÅn:</strong> ${booking.amount.toLocaleString('vi-VN')} VNƒê</p>
          </div>
          
          <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 20px 0; border-radius: 8px;">
            <h4>üìÖ L∆∞u √Ω quan tr·ªçng:</h4>
            <ul>
              <li>Vui l√≤ng ƒë·∫øn ƒë√∫ng gi·ªù ƒë√£ ƒë·∫∑t</li>
              <li>Mang theo gi·∫•y t·ªù t√πy th√¢n</li>
              <li>Li√™n h·ªá ngay n·∫øu c√≥ thay ƒë·ªïi</li>
            </ul>
          </div>
          
          <div style="background: white; padding: 20px; margin: 20px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <h3>Th√¥ng tin li√™n h·ªá d·ªãch v·ª•</h3>
            <p><strong>ƒêi·ªán tho·∫°i:</strong> ${service.contactInfo.phone}</p>
            <p><strong>Email:</strong> ${service.contactInfo.email}</p>
            <p><strong>ƒê·ªãa ch·ªâ:</strong> ${service.contactInfo.address}</p>
          </div>
          
          <p style="margin-top: 20px; color: #666;">
            Ch√∫c b·∫°n c√≥ m·ªôt tr·∫£i nghi·ªám tuy·ªát v·ªùi!<br>
            Tr√¢n tr·ªçng,<br>
            ƒê·ªôi ng≈© EasyBook
          </p>
        </div>
        
        <div style="background: #333; color: white; padding: 20px; text-align: center;">
          <p>&copy; 2024 EasyBook. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
        </div>
      </div>
    `
  };
};

// G·ª≠i email
const sendEmail = async (to, subject, html) => {
  try {
    const transporter = createTransporter();
    
    const mailOptions = {
      from: process.env.EMAIL_FROM,
      to: to,
      subject: subject,
      html: html
    };
    
    const info = await transporter.sendMail(mailOptions);
    console.log('Email ƒë√£ ƒë∆∞·ª£c g·ª≠i:', info.messageId);
    return { success: true, messageId: info.messageId };
    
  } catch (error) {
    console.error('L·ªói g·ª≠i email:', error);
    return { success: false, error: error.message };
  }
};

// G·ª≠i email x√°c nh·∫≠n booking
const sendBookingConfirmation = async (booking, service, user) => {
  const template = getBookingConfirmationTemplate(booking, service, user);
  return await sendEmail(user.email, template.subject, template.html);
};

// G·ª≠i email nh·∫Øc l·ªãch
const sendBookingReminder = async (booking, service, user) => {
  const template = getReminderTemplate(booking, service, user);
  return await sendEmail(user.email, template.subject, template.html);
};

module.exports = {
  sendEmail,
  sendBookingConfirmation,
  sendBookingReminder
}; 